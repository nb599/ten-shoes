name: Lighthouse Reports

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  lighthouse-reports:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build application
        run: npm run build
        env:
          AUTH_SECRET: lighthouse-test-secret-32-chars-long
          DATABASE_URL: postgresql://test:test@localhost:5432/test
          LHCI_SERVER_URL: ${{ secrets.LHCI_SERVER_URL }}
          LHCI_BUILD_TOKEN: ${{ secrets.LHCI_BUILD_TOKEN }}
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Run Lighthouse CI (Desktop Only)
        run: |
          echo "Running desktop LHCI with historical tracking..."
          npx lhci autorun --config=lighthouserc.desktop.js
          
          # Create reports directory and copy results
          mkdir -p lighthouse-reports
          if [ -f .lighthouseci/*.html ]; then
            cp .lighthouseci/*.html lighthouse-reports/desktop.html
            echo "✅ Desktop HTML report generated via LHCI"
          else
            echo "❌ No LHCI HTML generated, using direct Lighthouse"
            npm start &
            sleep 10
            npx lighthouse http://localhost:3000 --output=html --output-path=lighthouse-reports/desktop.html --preset=desktop --chrome-flags="--headless --no-sandbox"
            pkill -f "npm start"
          fi
          
          # Verify files
          ls -la lighthouse-reports/
        env:
          AUTH_SECRET: lighthouse-test-secret-32-chars-long
          DATABASE_URL: postgresql://test:test@localhost:5432/test
          LHCI_SERVER_URL: ${{ secrets.LHCI_SERVER_URL }}
          LHCI_BUILD_TOKEN: ${{ secrets.LHCI_BUILD_TOKEN }}
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Create Pages structure  
        run: |
          mkdir -p docs/lighthouse
          
          # Copy desktop report to Pages root
          if [ -f lighthouse-reports/desktop.html ]; then
            cp lighthouse-reports/desktop.html docs/lighthouse/index.html
            echo "✅ Desktop report copied to Pages root"
          else
            echo "❌ Desktop report missing, creating placeholder"
            echo "<h1>桌面端报告未生成</h1><p>请查看 Actions 日志了解详情。</p>" > docs/lighthouse/index.html
          fi
          
          # List final structure
          find docs/lighthouse -type f

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: lighthouse-reports/
          retention-days: 30

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/lighthouse

      - name: Deploy Pages
        uses: actions/deploy-pages@v4