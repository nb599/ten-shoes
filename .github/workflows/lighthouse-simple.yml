name: Lighthouse Reports

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  lighthouse-reports:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build application
        run: npm run build
        env:
          AUTH_SECRET: lighthouse-test-secret-32-chars-long
          DATABASE_URL: postgresql://test:test@localhost:5432/test

      - name: Start server and run Lighthouse
        run: |
          # Start server
          npm start &
          SERVER_PID=$!
          
          # Wait for server
          echo "Waiting for server..."
          for i in {1..30}; do
            if curl -f http://localhost:3000 >/dev/null 2>&1; then
              echo "Server ready!"
              break
            fi
            sleep 2
          done
          
          # Test server accessibility
          curl -f http://localhost:3000 || exit 1
          
          # Create output directory
          mkdir -p lighthouse-reports
          
          # Run Lighthouse for mobile (manual throttling)
          echo "Running mobile Lighthouse..."
          npx lighthouse http://localhost:3000 \
            --output=html \
            --output-path=lighthouse-reports/mobile.html \
            --emulated-form-factor=mobile \
            --throttling-method=devtools \
            --chrome-flags="--headless --no-sandbox --disable-dev-shm-usage"
          
          # Run Lighthouse for desktop  
          echo "Running desktop Lighthouse..."
          npx lighthouse http://localhost:3000 \
            --output=html \
            --output-path=lighthouse-reports/desktop.html \
            --emulated-form-factor=desktop \
            --chrome-flags="--headless --no-sandbox --disable-dev-shm-usage"
          
          # Stop server
          kill $SERVER_PID
          
          # Verify files
          ls -la lighthouse-reports/
        env:
          AUTH_SECRET: lighthouse-test-secret-32-chars-long
          DATABASE_URL: postgresql://test:test@localhost:5432/test

      - name: Create Pages structure
        run: |
          mkdir -p docs/lighthouse/mobile docs/lighthouse/desktop
          
          # Copy reports to Pages structure
          cp lighthouse-reports/mobile.html docs/lighthouse/mobile/lhr-1.html
          cp lighthouse-reports/desktop.html docs/lighthouse/desktop/lhr-1.html
          
          # Create main dashboard
          cat > docs/lighthouse/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Lighthouse 性能报告</title>
              <meta charset="UTF-8">
              <style>
                  body { font-family: system-ui; max-width: 800px; margin: 50px auto; padding: 20px; }
                  .report-link { display: block; padding: 15px; margin: 10px 0; background: #f5f5f5; text-decoration: none; color: #333; border-radius: 8px; }
                  .report-link:hover { background: #e5e5e5; }
                  h1 { color: #333; }
              </style>
          </head>
          <body>
              <h1>🚀 Lighthouse 性能报告</h1>
              <p>首页性能测试结果</p>
              
              <a href="./mobile/lhr-1.html" class="report-link">
                  📱 移动端报告
              </a>
              
              <a href="./desktop/lhr-1.html" class="report-link">
                  🖥️ 桌面端报告
              </a>
              
              <p><small>更新时间: $(date)</small></p>
          </body>
          </html>
          EOF
          
          # List final structure
          find docs/lighthouse -type f

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: lighthouse-reports/
          retention-days: 30

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/lighthouse

      - name: Deploy Pages
        uses: actions/deploy-pages@v4